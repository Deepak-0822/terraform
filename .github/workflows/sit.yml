name: Terraform Infra Setup 

on:
  push:
  workflow_dispatch:
env:
  AWS_REGION: ap-south-1
permissions:
  id-token: write
  contents: write

jobs:
  terraform:
    name: Terraform Plan & Apply
    runs-on: ubuntu-latest

    defaults:
      run:
        shell: bash
        working-directory: sit

    steps:
      - name: Checkout Repository
        uses: actions/checkout@v3

      - name: Configure AWS credentials
        uses: aws-actions/configure-aws-credentials@v1
        with:
          aws-access-key-id: ${{secrets.AWS_ACCESS_KEY_ID}}
          aws-secret-access-key: ${{secrets.AWS_SECRET_ACCESS_KEY}}
          aws-region: ap-south-1

      # - name: Install  dependencies and create ZIP
      #   run: |
      #     zip lambda_function.zip lambda_function.py
      #     ls

      - name: Set up Terraform
        uses: hashicorp/setup-terraform@v3
        with:
          terraform_version: 1.10.5

      - name: Install Terragrunt v0.45.4
        run: |
          sudo wget -q -O /bin/terragrunt "https://github.com/gruntwork-io/terragrunt/releases/download/v0.45.4/terragrunt_linux_amd64"
          sudo chmod +x /bin/terragrunt

      # Run terragrunt Plan in all folders
      - name: Terragrunt Plan
        run: terragrunt run-all plan --terragrunt-non-interactive

      # Run terragrunt Apply in all folders
      - name: Terragrunt apply
        run: terragrunt run-all apply --terragrunt-non-interactive

      # - name: Install Checkov 
      #   run: |
      #     python -m pip install --upgrade pip
      #     pip install checkov

      # - name: Run Checkov Static Analysis
      #   run: |
      #     checkov -d . --skip-path .github/* --skip-path k8s/*   --soft-fail


      # - name: Generate terraform docs
      #   uses: terraform-docs/gh-actions@main
      #   with:          
      #     working-dir: ./
      #     output-file: README.md
      #     output-method: inject
      #     git-push: "true"

      # - name: Terraform Init
      #   run: | 
      #    terraform init
      #   continue-on-error: true

      # - name: Terraform Validate
      #   run: terraform validate

      # - name: Terraform Format
      #   run: terraform fmt

      # - name: Run Terraform Lint
      #   run: tflint --init
        
      # - name: Terraform Plan        
      #   run: |  
      #    terraform plan

      # - name: Terraform Apply
      #   env:
      #     TF_VAR_private_key_name: ${{ secrets.EC2_PRIVATE_KEY }}
      #   working-directory: /home/runner/work/terraform/terraform
      #   run: |
      #    terraform apply -auto-approve

      # - name: Upload Terraform logs
      #   uses: actions/upload-artifact@v4
      #   with:
      #     name: terraform-logs
      #     path: ./log.txt

      # - name: Terraform destroy
      #   run: terraform destroy --auto-approve







