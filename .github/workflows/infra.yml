name: Terraform Infra Setup 

on:
  # push:
  workflow_dispatch:

jobs:
  terraform:
    name: Terraform Plan & Apply
    runs-on: ubuntu-latest

    steps:
      - name: Checkout Repository
        uses: actions/checkout@v3

      # - name: Save EC2 Private Key
      #   run: |
      #     echo "${{ secrets.EC2_PRIVATE_KEY }}"> private_key.pem
      #     pwd
      #     ls
      #     chmod 600 private_key.pem

      # - name: Install Terraform Lint
      #   run: |
      #     wget https://github.com/terraform-linters/tflint/releases/download/v0.50.2/tflint_linux_amd64.zip
      #     unzip tflint_linux_amd64.zip
      #     sudo mv tflint /usr/local/bin/
      #     tflint --version

      # - name: Install Checkov 
      #   run: |
      #     python -m pip install --upgrade pip
      #     pip install checkov

      # - name: Run Checkov Static Analysis
      #   run: |
      #     checkov -d . --skip-path .github/* --skip-path k8s/*   --soft-fail

      - name: Set up Terraform
        uses: hashicorp/setup-terraform@v3
        with:
          terraform_version: 1.10.5

      - name: Configure AWS credentials
        uses: aws-actions/configure-aws-credentials@v1
        with:
          aws-access-key-id: ${{secrets.AWS_ACCESS_KEY_ID}}
          aws-secret-access-key: ${{secrets.AWS_SECRET_ACCESS_KEY}}
          aws-region: ap-south-1

      - name: Terraform Init
        run:  terraform init

      - name: Terraform Validate
        run: terraform validate

      # - name: Run Terraform Lint
      #   run: tflint --init
        
      # - name: Terraform Plan        
      #   run: |  
      #    terraform plan

      - name: Terraform Apply
        env:
          TF_VAR_private_key_name: ${{ secrets.EC2_PRIVATE_KEY }}
        working-directory: /home/runner/work/terraform/terraform
        run: |
         terraform apply -auto-approve

      # - name: Upload Terraform logs
      #   uses: actions/upload-artifact@v4
      #   with:
      #     name: terraform-logs
      #     path: ./log.txt

      # - name: Terraform destroy
      #   run: terraform destroy --auto-approve









# module "alb" {
#   source                   = "./modules/alb"
#   name                     = "openproject-alb"
#   internal                 = false
#   security_groups          = [module.sg.web_sg_id] 
#   subnets                  = module.vpc.public_subnet_ids
#   vpc_id                   = module.vpc.vpc_id
#   instance_id              = module.ec2.id
#   enable_deletion_protection = false
#   tags = {
#     Environment = "dev"
#     App         = "openproject"
#   }
#   target_group_name = "openproject-tg"
#   target_group_port = 8080
# }